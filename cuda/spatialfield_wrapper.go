package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for spatialfield kernel
var spatialfield_code cu.Function

// Stores the arguments for spatialfield kernel invocation
type spatialfield_args_t struct {
	arg_dstx unsafe.Pointer
	arg_dsty unsafe.Pointer
	arg_dstz unsafe.Pointer
	arg_nx   float32
	arg_ny   float32
	arg_nz   float32
	arg_sx   float32
	arg_sy   float32
	arg_sz   float32
	arg_N    int
	argptr   [10]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for spatialfield kernel invocation
var spatialfield_args spatialfield_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	spatialfield_args.argptr[0] = unsafe.Pointer(&spatialfield_args.arg_dstx)
	spatialfield_args.argptr[1] = unsafe.Pointer(&spatialfield_args.arg_dsty)
	spatialfield_args.argptr[2] = unsafe.Pointer(&spatialfield_args.arg_dstz)
	spatialfield_args.argptr[3] = unsafe.Pointer(&spatialfield_args.arg_nx)
	spatialfield_args.argptr[4] = unsafe.Pointer(&spatialfield_args.arg_ny)
	spatialfield_args.argptr[5] = unsafe.Pointer(&spatialfield_args.arg_nz)
	spatialfield_args.argptr[6] = unsafe.Pointer(&spatialfield_args.arg_sx)
	spatialfield_args.argptr[7] = unsafe.Pointer(&spatialfield_args.arg_sy)
	spatialfield_args.argptr[8] = unsafe.Pointer(&spatialfield_args.arg_sz)
	spatialfield_args.argptr[9] = unsafe.Pointer(&spatialfield_args.arg_N)
}

// Wrapper for spatialfield CUDA kernel, asynchronous.
func k_spatialfield_async(dstx unsafe.Pointer, dsty unsafe.Pointer, dstz unsafe.Pointer, nx float32, ny float32, nz float32, sx float32, sy float32, sz float32, N int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("spatialfield")
	}

	spatialfield_args.Lock()
	defer spatialfield_args.Unlock()

	if spatialfield_code == 0 {
		spatialfield_code = fatbinLoad(spatialfield_map, "spatialfield")
	}

	spatialfield_args.arg_dstx = dstx
	spatialfield_args.arg_dsty = dsty
	spatialfield_args.arg_dstz = dstz
	spatialfield_args.arg_nx = nx
	spatialfield_args.arg_ny = ny
	spatialfield_args.arg_nz = nz
	spatialfield_args.arg_sx = sx
	spatialfield_args.arg_sy = sy
	spatialfield_args.arg_sz = sz
	spatialfield_args.arg_N = N

	args := spatialfield_args.argptr[:]
	cu.LaunchKernel(spatialfield_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("spatialfield")
	}
}

// maps compute capability on PTX code for spatialfield kernel.
var spatialfield_map = map[int]string{0: "",
	30: spatialfield_ptx_30}

// spatialfield PTX code for various compute capabilities.
const (
	spatialfield_ptx_30 = `
.version 6.4
.target sm_30
.address_size 64

	// .globl	spatialfield

.visible .entry spatialfield(
	.param .u64 spatialfield_param_0,
	.param .u64 spatialfield_param_1,
	.param .u64 spatialfield_param_2,
	.param .f32 spatialfield_param_3,
	.param .f32 spatialfield_param_4,
	.param .f32 spatialfield_param_5,
	.param .f32 spatialfield_param_6,
	.param .f32 spatialfield_param_7,
	.param .f32 spatialfield_param_8,
	.param .u32 spatialfield_param_9
)
{
	.reg .pred 	%p<56>;
	.reg .f32 	%f<162>;
	.reg .b32 	%r<67>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [spatialfield_param_0];
	ld.param.u64 	%rd2, [spatialfield_param_1];
	ld.param.u64 	%rd3, [spatialfield_param_2];
	ld.param.f32 	%f54, [spatialfield_param_3];
	ld.param.f32 	%f55, [spatialfield_param_4];
	ld.param.f32 	%f56, [spatialfield_param_5];
	ld.param.f32 	%f57, [spatialfield_param_6];
	ld.param.f32 	%f58, [spatialfield_param_7];
	ld.param.f32 	%f59, [spatialfield_param_8];
	ld.param.u32 	%r8, [spatialfield_param_9];
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %nctaid.x;
	mov.u32 	%r11, %ctaid.x;
	mad.lo.s32 	%r12, %r10, %r9, %r11;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32	%p1, %r1, %r8;
	@%p1 bra 	BB0_43;

	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f160, %f1;
	setp.eq.f32	%p2, %f160, 0f7F800000;
	abs.f32 	%f3, %f54;
	setp.eq.f32	%p3, %f3, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	mov.f32 	%f161, 0f7FFFFFFF;
	mov.f32 	%f151, %f161;
	@%p4 bra 	BB0_15;

	setp.ltu.f32	%p5, %f160, %f3;
	@%p5 bra 	BB0_14;
	bra.uni 	BB0_3;

BB0_14:
	setp.gtu.f32	%p18, %f3, 0f7F800000;
	add.f32 	%f81, %f1, %f54;
	selp.f32	%f82, %f81, %f1, %p18;
	add.f32 	%f83, %f1, %f82;
	setp.leu.f32	%p19, %f160, 0f00000000;
	selp.f32	%f151, %f83, %f82, %p19;
	bra.uni 	BB0_15;

BB0_3:
	lg2.approx.f32 	%f61, %f160;
	cvt.rzi.s32.f32	%r15, %f61;
	lg2.approx.f32 	%f62, %f3;
	cvt.rzi.s32.f32	%r16, %f62;
	sub.s32 	%r2, %r15, %r16;
	abs.f32 	%f4, %f3;
	setp.eq.f32	%p6, %f4, 0f00000000;
	setp.eq.f32	%p7, %f4, 0f7F800000;
	or.pred  	%p8, %p6, %p7;
	setp.eq.s32	%p9, %r15, %r16;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_9;
	bra.uni 	BB0_4;

BB0_9:
	setp.leu.f32	%p13, %f4, 0f00000000;
	add.f32 	%f77, %f3, %f3;
	selp.f32	%f147, %f77, %f3, %p13;
	bra.uni 	BB0_10;

BB0_4:
	abs.s32 	%r3, %r2;
	setp.lt.s32	%p11, %r3, 126;
	@%p11 bra 	BB0_8;
	bra.uni 	BB0_5;

BB0_8:
	cvt.rn.f32.s32	%f75, %r2;
	ex2.approx.ftz.f32 	%f76, %f75;
	mul.f32 	%f147, %f3, %f76;
	bra.uni 	BB0_10;

BB0_5:
	setp.lt.s32	%p12, %r3, 252;
	@%p12 bra 	BB0_7;
	bra.uni 	BB0_6;

BB0_7:
	shr.u32 	%r22, %r2, 31;
	add.s32 	%r23, %r2, %r22;
	shr.s32 	%r24, %r23, 1;
	cvt.rn.f32.s32	%f70, %r24;
	ex2.approx.ftz.f32 	%f71, %f70;
	mul.f32 	%f72, %f3, %f71;
	sub.s32 	%r25, %r2, %r24;
	cvt.rn.f32.s32	%f73, %r25;
	ex2.approx.ftz.f32 	%f74, %f73;
	mul.f32 	%f147, %f72, %f74;
	bra.uni 	BB0_10;

BB0_6:
	shr.s32 	%r17, %r2, 31;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r2, %r18;
	shr.s32 	%r20, %r19, 2;
	cvt.rn.f32.s32	%f63, %r20;
	ex2.approx.ftz.f32 	%f64, %f63;
	mul.f32 	%f65, %f3, %f64;
	mul.f32 	%f66, %f64, %f65;
	mul.f32 	%f67, %f64, %f66;
	mad.lo.s32 	%r21, %r20, -3, %r2;
	cvt.rn.f32.s32	%f68, %r21;
	ex2.approx.ftz.f32 	%f69, %f68;
	mul.f32 	%f147, %f69, %f67;

BB0_10:
	mul.f32 	%f78, %f160, 0f3F000000;
	setp.gtu.f32	%p14, %f147, %f78;
	add.f32 	%f79, %f147, %f147;
	selp.f32	%f148, %f147, %f79, %p14;
	setp.ltu.f32	%p15, %f148, %f3;
	mov.f32 	%f150, %f160;
	@%p15 bra 	BB0_13;

	mov.f32 	%f150, %f160;

BB0_12:
	sub.f32 	%f80, %f150, %f148;
	setp.ltu.f32	%p16, %f150, %f148;
	selp.f32	%f150, %f150, %f80, %p16;
	mul.f32 	%f148, %f148, 0f3F000000;
	setp.ge.f32	%p17, %f148, %f3;
	@%p17 bra 	BB0_12;

BB0_13:
	mov.b32 	 %r26, %f1;
	and.b32  	%r27, %r26, -2147483648;
	mov.b32 	 %r28, %f150;
	or.b32  	%r29, %r28, %r27;
	mov.b32 	 %f151, %r29;

BB0_15:
	mul.f32 	%f19, %f54, %f55;
	abs.f32 	%f20, %f19;
	setp.eq.f32	%p20, %f20, 0f00000000;
	or.pred  	%p22, %p2, %p20;
	mov.f32 	%f156, %f161;
	@%p22 bra 	BB0_29;

	setp.ltu.f32	%p23, %f160, %f20;
	@%p23 bra 	BB0_28;
	bra.uni 	BB0_17;

BB0_28:
	setp.gtu.f32	%p36, %f20, 0f7F800000;
	add.f32 	%f105, %f19, %f1;
	selp.f32	%f106, %f105, %f1, %p36;
	add.f32 	%f107, %f1, %f106;
	setp.leu.f32	%p37, %f160, 0f00000000;
	selp.f32	%f156, %f107, %f106, %p37;
	bra.uni 	BB0_29;

BB0_17:
	lg2.approx.f32 	%f85, %f160;
	cvt.rzi.s32.f32	%r30, %f85;
	lg2.approx.f32 	%f86, %f20;
	cvt.rzi.s32.f32	%r31, %f86;
	sub.s32 	%r4, %r30, %r31;
	abs.f32 	%f21, %f20;
	setp.eq.f32	%p24, %f21, 0f00000000;
	setp.eq.f32	%p25, %f21, 0f7F800000;
	or.pred  	%p26, %p24, %p25;
	setp.eq.s32	%p27, %r30, %r31;
	or.pred  	%p28, %p26, %p27;
	@%p28 bra 	BB0_23;
	bra.uni 	BB0_18;

BB0_23:
	setp.leu.f32	%p31, %f21, 0f00000000;
	add.f32 	%f101, %f20, %f20;
	selp.f32	%f152, %f101, %f20, %p31;
	bra.uni 	BB0_24;

BB0_18:
	abs.s32 	%r5, %r4;
	setp.lt.s32	%p29, %r5, 126;
	@%p29 bra 	BB0_22;
	bra.uni 	BB0_19;

BB0_22:
	cvt.rn.f32.s32	%f99, %r4;
	ex2.approx.ftz.f32 	%f100, %f99;
	mul.f32 	%f152, %f20, %f100;
	bra.uni 	BB0_24;

BB0_19:
	setp.lt.s32	%p30, %r5, 252;
	@%p30 bra 	BB0_21;
	bra.uni 	BB0_20;

BB0_21:
	shr.u32 	%r37, %r4, 31;
	add.s32 	%r38, %r4, %r37;
	shr.s32 	%r39, %r38, 1;
	cvt.rn.f32.s32	%f94, %r39;
	ex2.approx.ftz.f32 	%f95, %f94;
	mul.f32 	%f96, %f20, %f95;
	sub.s32 	%r40, %r4, %r39;
	cvt.rn.f32.s32	%f97, %r40;
	ex2.approx.ftz.f32 	%f98, %f97;
	mul.f32 	%f152, %f96, %f98;
	bra.uni 	BB0_24;

BB0_20:
	shr.s32 	%r32, %r4, 31;
	shr.u32 	%r33, %r32, 30;
	add.s32 	%r34, %r4, %r33;
	shr.s32 	%r35, %r34, 2;
	cvt.rn.f32.s32	%f87, %r35;
	ex2.approx.ftz.f32 	%f88, %f87;
	mul.f32 	%f89, %f20, %f88;
	mul.f32 	%f90, %f88, %f89;
	mul.f32 	%f91, %f88, %f90;
	mad.lo.s32 	%r36, %r35, -3, %r4;
	cvt.rn.f32.s32	%f92, %r36;
	ex2.approx.ftz.f32 	%f93, %f92;
	mul.f32 	%f152, %f93, %f91;

BB0_24:
	mul.f32 	%f102, %f160, 0f3F000000;
	setp.gtu.f32	%p32, %f152, %f102;
	add.f32 	%f103, %f152, %f152;
	selp.f32	%f153, %f152, %f103, %p32;
	setp.ltu.f32	%p33, %f153, %f20;
	mov.f32 	%f155, %f160;
	@%p33 bra 	BB0_27;

	mov.f32 	%f155, %f160;

BB0_26:
	sub.f32 	%f104, %f155, %f153;
	setp.ltu.f32	%p34, %f155, %f153;
	selp.f32	%f155, %f155, %f104, %p34;
	mul.f32 	%f153, %f153, 0f3F000000;
	setp.ge.f32	%p35, %f153, %f20;
	@%p35 bra 	BB0_26;

BB0_27:
	mov.b32 	 %r41, %f1;
	and.b32  	%r42, %r41, -2147483648;
	mov.b32 	 %r43, %f155;
	or.b32  	%r44, %r43, %r42;
	mov.b32 	 %f156, %r44;

BB0_29:
	div.rn.f32 	%f109, %f156, %f54;
	cvt.rmi.f32.f32	%f36, %f109;
	cvt.rn.f32.s32	%f37, %r8;
	abs.f32 	%f38, %f37;
	setp.eq.f32	%p38, %f38, 0f00000000;
	or.pred  	%p40, %p2, %p38;
	@%p40 bra 	BB0_42;

	setp.ltu.f32	%p41, %f160, %f38;
	@%p41 bra 	BB0_41;
	bra.uni 	BB0_31;

BB0_41:
	setp.gtu.f32	%p54, %f38, 0f7F800000;
	add.f32 	%f130, %f37, %f1;
	selp.f32	%f131, %f130, %f1, %p54;
	add.f32 	%f132, %f1, %f131;
	setp.leu.f32	%p55, %f160, 0f00000000;
	selp.f32	%f161, %f132, %f131, %p55;
	bra.uni 	BB0_42;

BB0_31:
	lg2.approx.f32 	%f110, %f160;
	cvt.rzi.s32.f32	%r45, %f110;
	lg2.approx.f32 	%f111, %f38;
	cvt.rzi.s32.f32	%r46, %f111;
	sub.s32 	%r6, %r45, %r46;
	abs.f32 	%f39, %f38;
	setp.eq.f32	%p42, %f39, 0f00000000;
	setp.eq.f32	%p43, %f39, 0f7F800000;
	or.pred  	%p44, %p42, %p43;
	setp.eq.s32	%p45, %r45, %r46;
	or.pred  	%p46, %p44, %p45;
	@%p46 bra 	BB0_37;
	bra.uni 	BB0_32;

BB0_37:
	setp.leu.f32	%p49, %f39, 0f00000000;
	add.f32 	%f126, %f38, %f38;
	selp.f32	%f157, %f126, %f38, %p49;
	bra.uni 	BB0_38;

BB0_32:
	abs.s32 	%r7, %r6;
	setp.lt.s32	%p47, %r7, 126;
	@%p47 bra 	BB0_36;
	bra.uni 	BB0_33;

BB0_36:
	cvt.rn.f32.s32	%f124, %r6;
	ex2.approx.ftz.f32 	%f125, %f124;
	mul.f32 	%f157, %f38, %f125;
	bra.uni 	BB0_38;

BB0_33:
	setp.lt.s32	%p48, %r7, 252;
	@%p48 bra 	BB0_35;
	bra.uni 	BB0_34;

BB0_35:
	shr.u32 	%r52, %r6, 31;
	add.s32 	%r53, %r6, %r52;
	shr.s32 	%r54, %r53, 1;
	cvt.rn.f32.s32	%f119, %r54;
	ex2.approx.ftz.f32 	%f120, %f119;
	mul.f32 	%f121, %f38, %f120;
	sub.s32 	%r55, %r6, %r54;
	cvt.rn.f32.s32	%f122, %r55;
	ex2.approx.ftz.f32 	%f123, %f122;
	mul.f32 	%f157, %f121, %f123;
	bra.uni 	BB0_38;

BB0_34:
	shr.s32 	%r47, %r6, 31;
	shr.u32 	%r48, %r47, 30;
	add.s32 	%r49, %r6, %r48;
	shr.s32 	%r50, %r49, 2;
	cvt.rn.f32.s32	%f112, %r50;
	ex2.approx.ftz.f32 	%f113, %f112;
	mul.f32 	%f114, %f38, %f113;
	mul.f32 	%f115, %f113, %f114;
	mul.f32 	%f116, %f113, %f115;
	mad.lo.s32 	%r51, %r50, -3, %r6;
	cvt.rn.f32.s32	%f117, %r51;
	ex2.approx.ftz.f32 	%f118, %f117;
	mul.f32 	%f157, %f118, %f116;

BB0_38:
	mul.f32 	%f127, %f160, 0f3F000000;
	setp.gtu.f32	%p50, %f157, %f127;
	add.f32 	%f128, %f157, %f157;
	selp.f32	%f158, %f157, %f128, %p50;
	setp.ltu.f32	%p51, %f158, %f38;
	@%p51 bra 	BB0_40;

BB0_39:
	sub.f32 	%f129, %f160, %f158;
	setp.ltu.f32	%p52, %f160, %f158;
	selp.f32	%f160, %f160, %f129, %p52;
	mul.f32 	%f158, %f158, 0f3F000000;
	setp.ge.f32	%p53, %f158, %f38;
	@%p53 bra 	BB0_39;

BB0_40:
	mov.b32 	 %r56, %f1;
	and.b32  	%r57, %r56, -2147483648;
	mov.b32 	 %r58, %f160;
	or.b32  	%r59, %r58, %r57;
	mov.b32 	 %f161, %r59;

BB0_42:
	div.rn.f32 	%f133, %f161, %f19;
	cvt.rmi.f32.f32	%f134, %f133;
	add.f32 	%f135, %f56, 0fBF800000;
	mul.f32 	%f136, %f135, 0f3F000000;
	sub.f32 	%f137, %f134, %f136;
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	add.f32 	%f138, %f54, 0fBF800000;
	mul.f32 	%f139, %f138, 0f3F000000;
	sub.f32 	%f140, %f151, %f139;
	mul.f32 	%f141, %f140, %f57;
	st.global.f32 	[%rd6], %f141;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	add.f32 	%f142, %f55, 0fBF800000;
	mul.f32 	%f143, %f142, 0f3F000000;
	sub.f32 	%f144, %f36, %f143;
	mul.f32 	%f145, %f144, %f58;
	st.global.f32 	[%rd8], %f145;
	mul.f32 	%f146, %f137, %f59;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f146;

BB0_43:
	ret;
}


`
)
